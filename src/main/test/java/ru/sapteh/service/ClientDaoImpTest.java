package ru.sapteh.service;import com.itextpdf.text.*;import com.itextpdf.text.pdf.PdfPCell;import com.itextpdf.text.pdf.PdfPTable;import com.itextpdf.text.pdf.PdfPage;import com.itextpdf.text.pdf.PdfWriter;import javafx.event.ActionEvent;import javafx.fxml.FXML;import org.apache.poi.ss.usermodel.*;import org.apache.poi.xssf.usermodel.XSSFFont;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import org.apache.poi.xssf.usermodel.XSSFWorkbookType;import org.hibernate.SessionFactory;import org.hibernate.cfg.Configuration;import org.junit.After;import org.junit.Before;import org.junit.Test;import ru.sapteh.controller.ClientController;import ru.sapteh.dao.DAO;import ru.sapteh.entity.Client;import ru.sapteh.entity.ClientService;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.util.ArrayList;import java.util.Comparator;import java.util.Date;import java.util.List;public class ClientDaoImpTest {    @Before    public void setUp() throws Exception {    }    @After    public void tearDown() throws Exception {    }    @Test    public void lastDateTest(){        SessionFactory factory = new Configuration().configure().buildSessionFactory();        DAO<Client, Integer> clientDaoImpl = new ClientDaoImp(factory);        List<Client> clients = clientDaoImpl.findByAll();        for (Client client : clients){            List<ClientService> collect = new ArrayList<>(client.getClientServiceSet());            if(collect.size() != 0) {                Date startTime = collect.stream().max(Comparator.comparing(ClientService::getStartTime)).get().getStartTime();                System.out.println(startTime);            }        }//        System.out.println(clientDaoImpl.findByAll());    }    @Test    public void create() {    }    @Test    public void findById() {    }    @Test    public void findByAll() {    }    @Test    public void update() {    }    @Test    public void delete() {    }    @Test    public void onActionSaveToPdfTest() throws IOException, DocumentException {        String fileName = "test.pdf";        Document document = new Document();        PdfWriter.getInstance(document, new FileOutputStream(fileName));        document.open();        Image image = Image.getInstance("./src/main/resources/images/as_logo_pdf.png");        image.scaleAbsoluteHeight(70);        image.scaleAbsoluteWidth(130);        image.setAlignment(Element.ALIGN_RIGHT);        document.add(image);        //Paragraph        Paragraph paragraph = new Paragraph("Hello world");        paragraph.setAlignment(Element.ALIGN_CENTER);        paragraph.setSpacingAfter(20);        document.add(paragraph);        //table        PdfPTable table = new PdfPTable(3);        table.addCell(new PdfPCell(new Phrase("Column1")));        table.addCell(new PdfPCell(new Phrase("Column2")));        table.addCell(new PdfPCell(new Phrase("Column3")));        table.setHeaderRows(1);        table.addCell(new PdfPCell(new Phrase("Row1.1")));        table.addCell(new PdfPCell(new Phrase("Row2.1")));        table.addCell(new PdfPCell(new Phrase("Row3.1")));        table.addCell(new PdfPCell(new Phrase("Row1.2")));        table.addCell(new PdfPCell(new Phrase("Row2.2")));        table.addCell(new PdfPCell(new Phrase("Row3.2")));        document.add(table);        document.close();    }    @Test    public void onActionExportToExcel() throws IOException {        XSSFWorkbook workbook = new XSSFWorkbook(XSSFWorkbookType.XLSX);        Sheet sheet = workbook.createSheet("Person");        sheet.setColumnWidth(0, 10000);        sheet.setColumnWidth(1, 5000);        //Header        Row header = sheet.createRow(0);        CellStyle headerStyle = workbook.createCellStyle();//        headerStyle.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex());//        headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);        XSSFFont font = workbook.createFont();        font.setFontHeightInPoints((short)16);        font.setBold(true);        headerStyle.setFont(font);        Cell headerCell = header.createCell(0);        headerCell.setCellValue("Name");        headerCell.setCellStyle(headerStyle);        headerCell = header.createCell(1);        headerCell.setCellValue("Age");        headerCell.setCellStyle(headerStyle);        //Next cells with data//        CellStyle style = workbook.createCellStyle();//        style.setWrapText(true);        Row row = sheet.createRow(1);        Cell cell = row.createCell(0);        cell.setCellValue("John Smith");//        cell.setCellStyle(style);        cell = row.createCell(1);        cell.setCellValue(20);//        cell.setCellStyle(style);        //write the content to a "temp.xlsx"        String fileLocation = "temp.xlsx";        FileOutputStream outputStream = new FileOutputStream(fileLocation);        workbook.write(outputStream);        workbook.close();        System.out.println(fileLocation);    }}